{% if ( target.subdirs | length ) and not ( target.subdirs in cache.subdirs ) %}
{%- for subdir in target.subdirs %}
add_subdirectory({{ subdir | absolute_path }} {{ project.build_path | absolute_path }}/{{ target.name }}/{{ subdir.name }} )
{%- endfor %}
{% do cache.subdirs.append(target.subdirs) %}
# {{ cache }}
{% endif -%}
{{target.command}}({{target.name}} {{target.type}}
{%- if not target.is_header_only %}
{%- for source in target.sources %}
    {{ source | absolute_path }}
{%- endfor %}
    {{ project.script_path | absolute_path }}
{%- endif %}
)
{%- if target.is_header_only %}
add_dependencies({{target.name}}
    {{ project.script_path | absolute_path }}
    )
{%- endif %}

add_dependencies({{target.name}} cpppm-update)

{% if target.include_dirs | length %}
target_include_directories({{target.name}} {{ target.public_visibility }}
{%- for include_dir in target.include_dirs %}
    {{ include_dir | absolute_path }}
{%- endfor %}
    {{ target.build_path | absolute_path }}/include
)
{% endif -%}
{%- if target.compile_options | length %}
target_compile_options({{target.name}} {{ target.public_visibility }}
{%- for compile_option in target.compile_options %}
    {{ compile_option }}
{%- endfor %}
)
{% endif -%}
{%- if target.compile_definitions | length %}
target_compile_definitions({{target.name}} {{ target.public_visibility }}
{%- for compile_definitions in target.compile_definitions %}
    {{ compile_definitions }}
{%- endfor %}
)
{% endif -%}
{%- if target.link_libraries | length %}
target_link_libraries({{target.name}} {{ target.public_visibility }}
{%- for link_library in target.link_libraries %}
    {{ link_library | to_library }}
{%- endfor %}
)
{% endif -%}
{%- if target.export_header %}
generate_export_header({{ target.name }} EXPORT_FILE_NAME {{ target.export_header }})
{% endif -%}
{%- if target.events  %}
{%- for event in target.events %}
message(STATUS "cpppm: setting up {{ event.name }} ({{ event.event_type }})")
# {{ event.event_type }}
{%- if event.event_type == 0 %}
execute_process(
    COMMAND {{ python }} {{ root_project.script_path | absolute_path }}  -p {{ root_project._profile }} -o ${CMAKE_BINARY_DIR} __cpppm_event__ {{ event.sha1 }}
    WORKING_DIRECTORY "${CMAKE_BINARY_DIR}"
)
{% elif event.event_type != 3 %}
add_custom_command(TARGET {{ target.name }} {{ event.type_str }}
    COMMAND {{ python }} {{ root_project.script_path | absolute_path }}  -p {{ root_project._profile }} -o ${CMAKE_BINARY_DIR} __cpppm_event__ {{ event.sha1 }}
    COMMENT "-- cpppm: firing {{target.name}} ({{ event.event_type }})"
)
{% endif %}
{% endfor %}
{% endif -%}

{%- if target.dependencies | length %}
target_sources({{ target.name }} PUBLIC {{ target.dependencies | to_dependencies(project) }})
{% endif %}

{% if target.install -%}
install(TARGETS {{ target.name }}
    PUBLIC_HEADER
        DESTINATION include
        COMPONENT Development
    LIBRARY
        DESTINATION lib
        COMPONENT Development
    ARCHIVE
        DESTINATION lib
        COMPONENT Development
    RUNTIME DESTINATION bin
    )
{%- endif %}
